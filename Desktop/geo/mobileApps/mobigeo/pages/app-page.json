{
    "pageModelVersion": "19.3.1",
    "description": "",
    "routerFlow": "survey",
    "metadata": {},
    "variables": {
        "messagesADP": {
            "type": "vb/ArrayDataProvider",
            "defaultValue": {
                "idAttribute": "id",
                "itemType": "page:messageType"
            }
        },
        "installPromptEventPayload": {
            "type": "any"
        },
        "promptCancelledByUser": {
            "type": "boolean",
            "defaultValue": false
        }
    },
    "types": {
        "messageType": {
            "id": "string",
            "severity": "string",
            "category": "string",
            "summary": "string",
            "detail": "string",
            "timestamp": "string",
            "autoTimeout": "number"
        }
    },
    "chains": {
        "showNotification": {
            "description": "Displays notifications sent by the Fire Notification action using the oj-messages component on this page.",
            "variables": {
                "eventPayload": {
                    "type": "messageType",
                    "input": "fromCaller"
                }
            },
            "root": "displayMessage",
            "actions": {
                "displayMessage": {
                    "module": "vb/action/builtin/fireDataProviderEventAction",
                    "parameters": {
                        "target": "{{ $page.variables.messagesADP }}",
                        "add": {
                            "data": "{{ [ $chain.variables.eventPayload ] }}"
                        }
                    }
                }
            }
        },
        "closeNotificationHandler": {
            "description": "Removes the notification message when its dismiss gesture has been invoked.",
            "variables": {
                "eventMessage": {
                    "type": "messageType",
                    "input": "fromCaller"
                }
            },
            "root": "removeMessage",
            "actions": {
                "removeMessage": {
                    "module": "vb/action/builtin/fireDataProviderEventAction",
                    "parameters": {
                        "target": "{{ $page.variables.messagesADP }}",
                        "remove": {
                            "keys": "{{ [ $variables.eventMessage.id ] }}"
                        }
                    }
                }
            }
        },
        "navDrawerNavigationChain": {
            "description": "Navigates to the flow selected in the navigation drawer.",
            "variables": {
                "item": {
                    "required": true,
                    "type": "string",
                    "input": "fromCaller"
                }
            },
            "root": "switch1",
            "actions": {
                "switch1": {
                    "module": "vb/action/builtin/switchAction",
                    "outcomes": {
                        "sign": "navigateToPage0"
                    },
                    "parameters": {
                        "caseValue": "{{ $chain.variables.item }}"
                    }
                },
                "navigateToPage0": {
                    "module": "vb/action/builtin/navigateToPageAction",
                    "parameters": {
                        "page": "app/survey"
                    }
                }
            }
        },
        "toggleDrawerChain": {
            "description": "Toggles the visibility of the navigation drawer.",
            "variables": {},
            "root": "toggleDrawer",
            "actions": {
                "toggleDrawer": {
                    "module": "vb/action/builtin/callComponentMethodAction",
                    "parameters": {
                        "component": "{{ $page.components.byId('mobile-navigation-drawer') }}",
                        "method": "toggle",
                        "params": []
                    }
                }
            }
        },
        "installPromptChain": {
            "description": "For Progressive Web Apps (PWA), displays a popup to help the user install to home screen.",
            "variables": {
                "eventPayload": {
                    "type": "object"
                }
            },
            "root": "assignVariableInstallPrompt",
            "actions": {
                "assignVariableInstallPrompt": {
                    "module": "vb/action/builtin/assignVariablesAction",
                    "parameters": {
                        "$page.variables.installPromptEventPayload": {
                            "source": "{{ $chain.variables.eventPayload }}"
                        }
                    },
                    "outcomes": {
                        "success": "ifPromptCancelled"
                    }
                },
                "ifPromptCancelled": {
                    "module": "vb/action/builtin/ifAction",
                    "parameters": {
                        "condition": "{{ !$page.variables.promptCancelledByUser && $page.variables.installPromptEventPayload}}"
                    },
                    "outcomes": {
                        "true": "displayAddToHomesScreenPopup"
                    }
                },
                "displayAddToHomesScreenPopup": {
                    "module": "vb/action/builtin/callComponentMethodAction",
                    "parameters": {
                        "component": "{{document.getElementById('pwaAddToHomeScreen')}}",
                        "method": "open",
                        "params": [
                            "{{ 'body' }}",
                            "{{ {my: {horizontal: 'end', vertical: 'bottom'}, at : {horizontal: 'end', vertical: 'bottom'}} }}"
                        ]
                    }
                }
            }
        },
        "addPWAChain": {
            "description": "For Progressive Web Apps (PWA), handles the ‘Add’ button in the add to home screen popup.",
            "root": "addPWA",
            "actions": {
                "addPWA": {
                    "module": "vb/action/builtin/callModuleFunctionAction",
                    "parameters": {
                        "module": "{{ $page.functions }}",
                        "functionName": "addPWA",
                        "params": [
                            "{{$page.variables.installPromptEventPayload }}"
                        ],
                        "returnType": "boolean"
                    },
                    "outcomes": {
                        "success": "assignVariablePromptCancelledByUser"
                    }
                },
                "assignVariablePromptCancelledByUser": {
                    "module": "vb/action/builtin/assignVariablesAction",
                    "parameters": {
                        "$page.variables.promptCancelledByUser": {
                            "source": "{{ $chain.results.addPWA }}"
                        }
                    }
                }
            }
        },
        "cancelPWAChain": {
            "description": "For Progressive Web Apps (PWA), handles the ‘Cancel’ button in the add to home screen popup.",
            "root": "assignVariablePromptCancelledByUser",
            "actions": {
                "assignVariablePromptCancelledByUser": {
                    "module": "vb/action/builtin/assignVariablesAction",
                    "parameters": {
                        "$page.variables.promptCancelledByUser": {
                            "source": true
                        }
                    },
                    "outcomes": {
                        "success": "closeAddToHomeScreenPopup"
                    }
                },
                "closeAddToHomeScreenPopup": {
                    "module": "vb/action/builtin/callComponentMethodAction",
                    "parameters": {
                        "component": "{{document.getElementById('pwaAddToHomeScreen')}}",
                        "method": "close"
                    }
                }
            }
        }
    },
    "eventListeners": {
        "application:navigateToItem": {
            "chains": [
                {
                    "chainId": "navDrawerNavigationChain",
                    "parameters": {
                        "item": "{{ $event.item }}"
                    }
                }
            ]
        },
        "vbNotification": {
            "chains": [
                {
                    "chainId": "showNotification",
                    "parameters": {
                        "eventPayload": "{{ { id: $event.key, summary: $event.summary, detail: $event.message, severity: $event.type, autoTimeout: $event.displayMode === 'transient' ? 0 : -1, timestamp: oj.IntlConverterUtils.dateToLocalIso(new Date()) } }}"
                    }
                }
            ]
        },
        "onMessageClose": {
            "chains": [
                {
                    "chainId": "closeNotificationHandler",
                    "parameters": {
                        "eventMessage": "{{ $event.detail.message }}"
                    }
                }
            ]
        },
        "navDrawerNavigation": {
            "chains": [
                {
                    "chainId": "navDrawerNavigationChain",
                    "parameters": {
                        "item": "{{ $event.detail.value }}"
                    }
                }
            ]
        },
        "toggleDrawer": {
            "chains": [
                {
                    "chainId": "toggleDrawerChain",
                    "parameters": {}
                }
            ]
        },
        "vbBeforeAppInstallPrompt": {
            "chains": [
                {
                    "chainId": "installPromptChain",
                    "parameters": {
                        "eventPayload": "{{ $event }}"
                    }
                }
            ]
        },
        "addToHomeScreenConfirm": {
            "chains": [
                {
                    "chainId": "addPWAChain"
                }
            ]
        },
        "addToHomeScreenCancel": {
            "chains": [
                {
                    "chainId": "cancelPWAChain"
                }
            ]
        }
    },
    "imports": {
        "components": {
            "oj-ext-mobile-navigation-bar-drawer": {
                "path": "vb/components/mobile-navigation-bar-drawer/loader"
            },
            "oj-messages": {
                "path": "ojs/ojmessages"
            },
            "oj-avatar": {
                "path": "ojs/ojavatar"
            },
            "oj-popup": {
                "path": "ojs/ojpopup"
            },
            "oj-button": {
                "path": "ojs/ojbutton"
            }
        }
    },
    "translations": {
        "app": {
            "path": "./resources/strings/app/nls/app-strings"
        }
    }
}